'From Pharo10.0.0 of 15 March 2023 [Build information: Pharo-10.0.0+build.538.sha.179ef655ae2b150009a860b127aa3605366659ca (64 Bit)] on 6 February 2024 at 10:22:44.934 pm'!Object subclass: #Crag	instanceVariableNames: 'roll'	classVariableNames: ''	package: 'CPS506'!!Crag methodsFor: 'initialization' stamp: 'HetuPatel 2/7/2024 20:23'!setRoll: dice	roll := dice.! !!Crag methodsFor: 'testing' stamp: 'HetuPatel 2/7/2024 21:16'!isStraight|sort|sort := roll asSortedCollection.(((sort at: 1) = 1) and: (((sort at: 2) = 2) and: (sort at: 3) = 3)) ifTrue: [ ^true ].(((sort at: 1) = 4) and: (((sort at: 2) = 5) and: (sort at: 3) = 6)) ifTrue: [ ^true ].(((sort at: 1) = 1) and: (((sort at: 2) = 3) and: (sort at: 3) = 5)) ifTrue: [ ^true ].(((sort at: 1) = 2) and: (((sort at: 2) = 4) and: (sort at: 3) = 6)) ifTrue: [ ^true ].^false. ! !!Crag methodsFor: 'testing' stamp: 'HetuPatel 2/7/2024 20:59'!isCrag|sum check|sum := ((roll at: 1) + (roll at: 2) + (roll at: 3)).check := false.(((roll at: 1) = (roll at: 2)) or: (((roll at: 2) = (roll at: 3)) or: ((roll at: 1) = (roll at: 3)))) ifTrue: [check := true].(sum = 13) ifTrue: [ (check) ifTrue: [ ^true ] ifFalse: [ ^false ] ] ifFalse: [^false].! !!Crag methodsFor: 'testing' stamp: 'HetuPatel 2/7/2024 20:49'!isThirteen|temp|temp := self class new.temp setRoll: roll.(temp isCrag) ifTrue: [ ^false ] ifFalse: [(((roll at: 1) + (roll at: 2) + (roll at: 3)) = 13) ifTrue: [^true] ifFalse: [^false]].! !!Crag methodsFor: 'testing' stamp: 'HetuPatel 2/7/2024 21:06'!isThreeOfAKind((roll at: 1) = (roll at: 2) and: ((roll at: 2) = (roll at: 3))) ifTrue: [ ^true ] ifFalse: [ ^false ]! !!Crag methodsFor: 'accessing' stamp: 'HetuPatel 2/7/2024 22:16'!category|name sort temp big score dic|big := 0.temp := self class new.temp setRoll: roll.(temp isCrag) ifTrue: [ ^'Crag' ].(temp isThreeOfAKind ) ifTrue: [ ^'Three-Of-A-Kind' ].(temp isThirteen) ifTrue: [ ^'Thirteen' ].sort := roll asSortedCollection.(((sort at: 1) = 1) and: (((sort at: 2) = 2) and: (sort at: 3) = 3)) ifTrue: [ ^'Low Straight' ].(((sort at: 1) = 4) and: (((sort at: 2) = 5) and: (sort at: 3) = 6)) ifTrue: [ ^'High Straight' ].(((sort at: 1) = 1) and: (((sort at: 2) = 3) and: (sort at: 3) = 5)) ifTrue: [ ^'Odd Straight' ].(((sort at: 1) = 2) and: (((sort at: 2) = 4) and: (sort at: 3) = 6)) ifTrue: [ ^'Even Straight' ].1 to: 3 do: [ :a|	((roll at: a) > big) ifTrue: [ big := (roll at: a) ]	].score := temp score.(score > big) ifTrue: [ name := score/2 ] ifFalse: [ name := big ].dic := Dictionary new.dic at: 2 put: 'Twos'.dic at: 3 put: 'Threes'.dic at: 4 put: 'Fours'.dic at: 5 put: 'Fives'.dic at: 6 put: 'Sixes'.^(dic at: name).! !!Crag methodsFor: 'as yet unclassified' stamp: 'HetuPatel 2/7/2024 20:24'!getRoll	^roll! !!Crag methodsFor: 'scoring' stamp: 'HetuPatel 2/7/2024 22:03'!score |arr temp first second third final big|first := 0.second := 0.third := 0.big:= 0.final := 0.temp := self class new.temp setRoll: roll.(temp isCrag) ifTrue: [ ^50 ].(temp isThirteen) ifTrue: [ ^26 ].(temp isThreeOfAKind) ifTrue: [ ^25 ].(temp isStraight) ifTrue: [ ^20 ].1 to: 3 do: [ :a|	((roll at: a) > big) ifTrue: [ big := (roll at: a) ]	].((roll at: 1) = (roll at: 2)) ifTrue: [ first:= (roll at:1)*2 ].((roll at: 2) = (roll at: 3)) ifTrue: [ second:= (roll at:2)*2 ].((roll at: 1) = (roll at: 3)) ifTrue: [ third:= (roll at:3)*2 ].arr := Array new: 4.arr at: 1 put: first.arr at: 2 put: second.arr at: 3 put: third.arr at: 4 put: big.arr do: [ :a |	(a > final) ifTrue: [ final := a ]	 ].^final.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Crag class	instanceVariableNames: ''!!Crag class methodsFor: 'as yet unclassified' stamp: 'HetuPatel 2/7/2024 20:31'!surprise	"comment stating purpose of class-side method"	"scope: class-variables  &  class-instance-variables"	| array new_crag|	array := Array new: 3.	array at: 1 put: (Random new next * 6) floor + 1.	array at: 2 put: (Random new next * 6) floor + 1.	array at: 3 put: (Random new next * 6) floor + 1.		new_crag := self new.	new_crag setRoll: array.	^new_crag.	! !!Crag class methodsFor: 'instance creation' stamp: 'HetuPatel 2/7/2024 20:23'!new: dice	"comment stating purpose of class-side method"	"scope: class-variables  &  class-instance-variables"	| new_crag |	new_crag := self new.	new_crag setRoll: dice.	^new_crag ! !